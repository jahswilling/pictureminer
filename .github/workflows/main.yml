name: ci/cd

on:
  push:
    branches:
      - "main"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: docker login
      env:
        DOCKER_USER: ${{ secrets.DOCKER_HUB_USERNAME }}   
        DOCKER_PASSWORD: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }} 
        
      run: |
        docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
    - name: docker build picture_api
      env:
        Tag: ${{ steps.tag.outputs.tag }}
      run: |
        docker build ./picture_api -t root0877/picture_api:$Tag
    - name: docker build image_miner
      env:
        Tag: ${{ steps.tag.outputs.tag }}
      run: |
        docker build ./image_miner -t root0877/image_miner:$Tag
    - name: docker build miner_frontend
      env:
        Tag: ${{ steps.tag.outputs.tag }}
      run: |
        docker build ./frontend -t root0877/miner_frontend:$Tag
    - name: docker build miner_reverseproxy
      env:
        Tag: ${{ steps.tag.outputs.tag }}
      run: |
        docker build ./nginx -t root0877/miner_reverseproxy:$Tag
        
    - name: docker push
      env:
          Tag: ${{ steps.tag.outputs.tag }}
      run: |
        docker push root0877/picture_api:$Tag
    - name: docker push
      env:
        Tag: ${{ steps.tag.outputs.tag }}
      run: |
        docker push root0877/image_miner:$Tag
    - name: docker push
      env:
        Tag: ${{ steps.tag.outputs.tag }}
      run: |
        docker push root0877/miner_frontend:$Tag
    - name: docker push
      env:
        Tag: ${{ steps.tag.outputs.tag }}
      run: |
        docker push root0877/miner_reverseproxy:$Tag

    - name: Install kubectl
      uses: azure/setup-kubectl@v2.0
      with:
        version: 'v1.24.0'
      id: install

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Update kube config
      run: aws eks update-kubeconfig --name pictureMinerCluster --region us-east-1

    - name: Deploy to EKS
      run: |
        kubectl apply -f frontend/frontend-deployment.yaml
        kubectl apply -f image_miner/image_miner-deployment.yaml 
        kubectl apply -f nginx/nginx-deployment.yaml 
        kubectl apply -f picture_api/picture_api-deployment.yaml
        kubectl apply -f frontend/frontend-service.yaml
        kubectl apply -f image_miner/image_miner-service.yaml 
        kubectl apply -f nginx/nginx-service.yaml 
        kubectl apply -f picture_api/picture_api-service.yaml